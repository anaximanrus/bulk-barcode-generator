version: '3.8'

services:
  # Backend API service
  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: barcode-backend
    restart: unless-stopped
    ports:
      - "4000:4000"
    environment:
      - NODE_ENV=production
      - PORT=4000
    volumes:
      # Mount fonts directory if you want to update fonts without rebuilding
      - ./backend/fonts:/app/backend/fonts:ro
      # Optional: Mount .env file for environment variables
      # - ./.env:/app/backend/.env:ro
    networks:
      - barcode-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:4000/api/barcode/generate', (r) => {process.exit(r.statusCode === 405 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      start_period: 5s
      retries: 3

  # Frontend Next.js service
  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: barcode-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - NEXT_TELEMETRY_DISABLED=1
      # Set backend URL for API calls from the browser
      - NEXT_PUBLIC_API_URL=http://localhost:4000
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - barcode-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 3s
      start_period: 10s
      retries: 3

networks:
  barcode-network:
    driver: bridge

# Optional: Add volumes for persistent data if needed in the future
# volumes:
#   barcode-data:
